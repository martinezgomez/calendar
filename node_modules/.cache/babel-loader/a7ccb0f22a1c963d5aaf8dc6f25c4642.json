{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\misProyectos\\\\calendar\\\\calendar\\\\src\\\\components\\\\Calendar\\\\Calendar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'primeicons/primeicons.css';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.css';\nimport 'primeflex/primeflex.css';\nimport { FullCalendar } from \"primereact/fullcalendar\";\nimport { CalendarService } from \"../../Services/CalendarService\";\nimport dayGr1dPlug1n from '@fullcalendar/daygrid';\nimport timeGr1dPlug1n from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input, Label } from \"reactstrap\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useForm } from \"react-hook-form\";\nexport default function Calendar() {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm(); //Hook de estado para cargar los datos de las citas\n\n  const [events, setEvents] = useState([]); //Hook de estado para abrir o cerrar la ventana modal\n\n  const [state = false, setState] = useState(); //opciones d elos datos que muestra el componente full calendar\n\n  const options = {\n    plugins: [dayGr1dPlug1n, timeGr1dPlug1n, interactionPlugin],\n    displayEventEnd: true,\n    defaultView: 'dayGridMonth',\n    defaultDate: '2021-01-01',\n    header: {\n      left: 'prev, next',\n      center: 'title',\n      right: 'dayGridMonth, t1meGr1dWeek, t1meGr1dDay'\n    },\n    editable: true\n  };\n\n  const openModal = () => {\n    setState(!state);\n  };\n  /*const addAlarm = () => {\r\n      useEffect(() => {\r\n          calendarService.setEvents(form).then(console.log(\"alarm created\"));\r\n      }, []);\r\n  }*/\n\n\n  const calendarService = new CalendarService();\n  useEffect(() => {\n    calendarService.getEvents().then(data => setEvents(data));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onSubmit = form => {\n    calendarService.setEvents(form).then(data => setEvents(data));\n    openModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"class\",\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        events: events,\n        options: options,\n        onClick: openModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: state,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Add Alarm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"title\",\n            id: \"title\",\n            type: \"text\",\n            placeholder: \"Add name of alarm\",\n            ref: register()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"start\",\n            id: \"start\",\n            type: \"datetime-local\",\n            placeholder: \"2021-01-01T16:00:00\",\n            ref: register()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"end\",\n            id: \"end\",\n            type: \"datetime-local\",\n            placeholder: \"2021-01-01T16:30:00\",\n            ref: register()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleSubmit(onSubmit),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: openModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Calendar, \"DFxievL3C2TNFXaFTHlwMwUHzoQ=\", false, function () {\n  return [useForm];\n});\n\n_c = Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["D:/misProyectos/calendar/calendar/src/components/Calendar/Calendar.jsx"],"names":["React","useState","useEffect","FullCalendar","CalendarService","dayGr1dPlug1n","timeGr1dPlug1n","interactionPlugin","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","Input","Label","useForm","Calendar","register","handleSubmit","events","setEvents","state","setState","options","plugins","displayEventEnd","defaultView","defaultDate","header","left","center","right","editable","openModal","calendarService","getEvents","then","data","onSubmit","form"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {FullCalendar} from \"primereact/fullcalendar\";\r\nimport {CalendarService} from \"../../Services/CalendarService\";\r\nimport dayGr1dPlug1n from '@fullcalendar/daygrid';\r\nimport timeGr1dPlug1n from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Input, Label} from \"reactstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { useForm} from \"react-hook-form\";\r\n\r\n\r\nexport default function Calendar() {\r\n\r\n    const { register, handleSubmit} = useForm();\r\n\r\n    //Hook de estado para cargar los datos de las citas\r\n    const [events, setEvents] = useState([]);\r\n\r\n    //Hook de estado para abrir o cerrar la ventana modal\r\n    const [state = false, setState] = useState();\r\n\r\n    //opciones d elos datos que muestra el componente full calendar\r\n    const options = {\r\n        plugins: [dayGr1dPlug1n, timeGr1dPlug1n, interactionPlugin],\r\n        displayEventEnd: true,\r\n        defaultView: 'dayGridMonth',\r\n        defaultDate: '2021-01-01',\r\n        header: {\r\n            left: 'prev, next',\r\n            center: 'title',\r\n            right: 'dayGridMonth, t1meGr1dWeek, t1meGr1dDay'\r\n        },\r\n        editable: true\r\n    };\r\n\r\n    const openModal = () => {\r\n        setState(!state);\r\n    }\r\n\r\n    /*const addAlarm = () => {\r\n        useEffect(() => {\r\n            calendarService.setEvents(form).then(console.log(\"alarm created\"));\r\n        }, []);\r\n    }*/\r\n\r\n    const calendarService = new CalendarService();\r\n\r\n    useEffect(() => {\r\n        calendarService.getEvents().then(data => setEvents(data));\r\n    }, []);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onSubmit = form => {\r\n        calendarService.setEvents(form).then(data => setEvents(data));\r\n        openModal()\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"class\">\r\n                <FullCalendar events={events} options={options}  onClick={openModal}/>\r\n            </div>\r\n            <Modal isOpen={state}>\r\n                <ModalHeader>\r\n                    Add Alarm\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                        <input name=\"title\" id=\"title\" type=\"text\" placeholder=\"Add name of alarm\" ref={register()}/>\r\n                        <input name=\"start\" id=\"start\" type=\"datetime-local\" placeholder=\"2021-01-01T16:00:00\" ref={register()}/>\r\n                        <input name=\"end\" id=\"end\" type=\"datetime-local\" placeholder=\"2021-01-01T16:30:00\" ref={register()}/>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={handleSubmit(onSubmit)}>Save</Button>\r\n                    <Button color=\"secondary\" onClick={openModal}>Close</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}